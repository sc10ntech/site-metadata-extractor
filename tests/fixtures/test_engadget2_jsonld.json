{
  "@context": "https://schema.org",
  "@type": "Article",
  "url": "https://www.engadget.com/hitting-the-books-attack-surface-corey-doctorow-macmillan-153050435.html",
  "author": [
    {
      "@type": "Person",
      "url": "https://www.engadget.com/about/editors/",
      "name": "Andrew Tarantola"
    }
  ],
  "headline": "Hitting the Books: The latest 'Little Brother' is a stark cybersecurity thriller",
  "datePublished": "Sat, Oct 17 2020 11:30:50 EDT",
  "mainEntityOfPage": "True",
  "thumbnailUrl": "https://s.yimg.com/os/creatr-uploaded-images/2020-10/5d10de30-0dcf-11eb-bfcf-86c8214584b2",
  "image": [
    {
      "@type": "ImageObject",
      "url": "https://o.aolcdn.com/images/dims?thumbnail=640%2C480&amp;quality=95&amp;image_uri=https%3A%2F%2Fs.yimg.com%2Fos%2Fcreatr-uploaded-images%2F2020-10%2F5d10de30-0dcf-11eb-bfcf-86c8214584b2&amp;client=amp-blogside-v2&amp;signature=4db0e7c85216a5b3641d73fa7f9e92747037cfd6",
      "width": "640px",
      "height": "480px"
    }
  ],
  "articleBody": "Back in 2008, New York Times best-selling author and Boing Boing alum, Cory Doctorow introduced Markus &#x201C;w1n5t0n&#x201D; Yallow to the world in the original Little Brother (which you can still read for free right here). The story follows the talented teenage computer prodigy&#x2019;s exploits after he and his friends find themselves caught in the aftermath of a terrorist bombing of the Bay Bridge. They must outwit and out-hack the DHS, which has turned San Francisco into a police state. Its sequel, Homeland, catches up with Yallow a few years down the line as he faces an impossible choice between behaving as the heroic hacker his friends see him as and toeing the company line. The third installment, Attack Surface, is a standalone story set in the Little Brother universe. It follows Yallow&#x2019;s archrival, Masha Maximow, an equally talented hacker who finds herself working as a counterterrorism expert for a multinational security firm. By day, she enables tin-pot dictators around the world to repress and surveil their citizens. By night, she helps those same citizens resist the very systems she has put in place to avoid the government&#x2019;s intruding gaze. But when the repression hits too close to home &#x2014; in this case, Oakland &#x2014; Masha must use her skills to protect the people she cares for the most with as little collateral damage as possible.  In the excerpt below, Masha finds herself in a squalid Slovstakia hotel, recently fired by her employer Xoth and no longer able to assist her favored band of street resisters, led by Chriztina. Then, things go sideways.  Cory Doctorow Excerpt from ATTACK SURFACE by Cory Doctorow. Copyright &#xA9; 2020 Cory Doctorow.I woke to find myself in the dark room, with the sense that there had just been a loud noise. I sat up, looking around, reaching for my bag, shucking swiftly out of the sleep-sack, trying to remember where the light was, where I&#x2019;d left my shoes.Then I heard a scream from the street below, and a car horn, and then more screams, and then a terrible, rending crash. I stopped feeling for the light switch and went to the window, opening the blinds from the edge, looking down.It was a bad crash, one of the city&#x2019;s Finecab subcompact autonomous taxis bent around an empty planter, and I reflexively snorted: the self-driving vehicles were an absurd source of national pride for Slovstakia, and if you&#x2019;ve heard of Slovstakia, there&#x2019;s a pretty good chance that this is literally the only thing you know about it: &#x201C;Oh, that&#x2019;s the country that was stupid enough to buy gen-one automatic taxis.&#x201D; The Finecabs were notorious for getting into fender benders, and had become a symbol of how easy it was for foreign companies to sell garbage tech to the country&#x2019;s ruling elite (see also: Xoth).But this wasn&#x2019;t one of the customary comedy-crashes. From the sounds filtering up from the road, someone had been hurt. I saw someone in hotel livery rush to the car and decided it wasn&#x2019;t my problem anymore. I went back to bed. I was just drifting off when I heard another crash, farther away, accompanied by blaring horns, then another, almost immediately after, and screams that didn&#x2019;t stop. I looked out the window and saw that others were doing the same, some of them holding their phones, and then they were shouting excitedly at each other in Boris. I retreated to my bed and got out my phone, tunneled out to the free world, and started looking for Slovstakia in the feeds. Even though it was all in Cyrillic, it wasn&#x2019;t hard to figure out the night&#x2019;s news from the pictures: first the massive protests in the central square, then a baton charge from the cops and a countercharge, blood and tear gas, and then more gas, pepper spray, and the crowd broke and ran for it. That much I&#x2019;d seen before, but what came next was anything but the usual.At first, it was just photos of car wrecks, all involving Finecabs, many with injuries. Judging from the clothing of the injured, they were all protesters. I started to get a bad feeling. I kept scrolling. More injuries, more crashes&#x2014; then, a shakicam video, racking up views like a broken odometer: an autonomous taxi speeding toward a crowd of protesters who were standing on an empty street corner. The protesters noticed the cab as it drew near to them and broke and ran, and then&#x2014;the cab chased one of them. It was a woman, in a puffa jacket and snow boots, and as she ran, her friends screamed in horror. She turned a corner and the view from the camera started to jerk as whomever was holding it raced after it, rounding the corner just as the car sped off. The woman was lying motionless in the street.That&#x2019;s the video you probably saw, if you saw any of them, but for me, it wasn&#x2019;t the worst. Compared to the videos taken from inside the taxis, by passengers who were hammering at the emergency stop buttons, that video was relatively benign. The screams from inside the cars as their victims&#x2019; heads starred the windshields and left behind streaks of blood and hair were a thousand times more terrifying.I knew I wouldn&#x2019;t be going back to bed that night. I logged in to Aeroflot and booked a ticket on the next flight out, to Moscow the next morning. It wasn&#x2019;t Berlin, but it didn&#x2019;t have to be. I could get to Berlin from there. I could get anywhere from there.Where should I go? I felt alone and small, and ashamed to have been fired. I was good at being alone, and scared could go into a compartment, easy.Apparently I wasn&#x2019;t the kind of person who worked for Xoth anymore. I didn&#x2019;t want to be that kind of person. Chances were pretty high that Xoth had sold Litvinchuk and pals the exploits to take over those cars. I&#x2019;d been complicit in some pretty terrible shit before, sure, but what if Kriztina had been thrown over one of those little subcompacts, or crushed against a building by one, or run down and driven over?I messaged her, just a quick encrypted check-in, and then, because I was going to be leaving soon, I packed my bag and synched my sensitive files to an encrypted cloud store, then securely erased them off my laptop. Now I could comply with an order to log in to my laptop and enter my hard drive&#x2019;s pass- phrase without turning over my most sensitive data.Doing that took my mind off Kriztina, but it also focused my attention on what I was going to do after my flight landed in Moscow in a few hours. Reflexively, I looked at my calendar, though of course all my appointments related to a job I&#x2019;d just been fired from with extreme prejudice. But looking also reminded me that it was Tanisha&#x2019;s birthday, or it was in Europe and would be shortly in San Francisco. The reminder was smart enough to include my address book entry for her and that was smart enough to include her last social post, a selfie of her in afro-puffs, grinning in front of a huge crowd of protesters somewhere else &#x2014; Oakland, of course.Seeing her smiling out of my laptop weaponized my loneliness, making it physical, an elephant on my chest, so that I gasped and gasped before my breath came back. Tanisha was a remnant of another life of mine, one without so many compartments and so many contradictions to stuff into them. It had been years since we&#x2019;d been in regular contact, but still, she was one of the few people whose birthday was still in my calendar, and I never missed sending her a note.  Happy birthday, Neesh! Thinking of you  That was truer than I meant it to be.  hope you have a killer day. Stay safe, stay weird, stay you. XO Masha  That was all, a message whose mere existence &#x2014; still thinking of you &#x2014; carried as much meaning as the words inside it. I sent it and went back to looking at connections from Sheremetyevo.Then my phone rang.***My screen showed TANISHA, and an older pic, which dated back to the last time I&#x2019;d seen her, which was at Burning Man, with her in a silver bathing&#xA0; suit and her afro all crazy around her head, playing an upright bass in a jam band that we&#x2019;d wandered into.Tanisha was calling my old number&#x2014;I mean, my OG number, the cell number I&#x2019;d gotten at twelve&#x2014;which forwarded to a cloud asterisk call-server that had a ton of rules that allowed a very small number of people to forward onto whatever phone I was using at the moment. I was religious about updating the forward, even though (or because) it meant my mom could reach me whenever she wanted to, which was both more often than I wanted to speak to her and less often than I wanted her to want to speak to me.&#x201C;Yo.&#x201D;&#x201C;Masha?&#x201D;&#x201C;Hey, Neesh. Uh, happy birthday.&#x201D; &#x201C;That&#x2019;s tomorrow.&#x201D;&#x201C;Not where I am.&#x201D;&#x201C;Oh. Shit. Is it like three a.m. where you are or something?&#x201D; &#x201C;Two a.m. Don&#x2019;t worry about it, I was up.&#x201D;&#x201C;Masha, tell me you&#x2019;re not still partying. You&#x2019;re too old for that.&#x201D;I laughed. &#x201C;I&#x2019;m not too old for it, but no, I&#x2019;m not partying.&#x201D; I looked around the terrible Soviet-era hotel room. &#x201C;Packing for a flight.&#x201D; Then I wished I hadn&#x2019;t said that.&#x201C;Where are you flying?&#x201D;Maybe some part of me wanted to have this discussion with her. Otherwise, why would I have raised the subject?&#x201C;I&#x2019;m still deciding that.&#x201D;There was a pause on the other end. &#x201C;Uh, okay. You must be hella far away, though, the call sounds terrible.&#x201D;&#x201C;I am, but I&#x2019;m also putting the call through a bridge. Makes the logs harder to fingerprint.&#x201D;She sang a few bars of the Mission: Impossible theme, which was her traditional way of telling me that she wasn&#x2019;t impressed with my paranoia. But she trailed off weakly. &#x201C;Sorry, I&#x2019;m in no position to be mocking you.&#x201D;Oh. I tried not to pay much attention to US politics&#x2014;after all, most of what I hated about present-day America was stuff I helped to invent. But of course a call out of the blue from Tanisha was more likely to be soliciting professional advice and not catching up on gossip.&#x201C;Tell me about it.&#x201D;The long silence spoke volumes. I was sure she was thinking something like, Can I even trust this phone connection?&#x201C;Neesh, if you want to talk more privately, I can call you back. You still have that app?&#x201D; We used to use Signal for phone conversations when I was in- country, and Tanisha said she was going to try to get her pals to use it too, but I knew that without active reminders of the threat model most people would default back to the standard way of talking.&#x201C;Uh,&#x201D; she said.&#x201C;Thought so. Reinstall it, and I&#x2019;ll call you in five.&#x201D;&#x201C;Can you hear me?&#x201D; Signal calls were a lot more jittery than regular voice or even Skype, prone to drop into Dalek-sounding interference and voice-in- a-box-fan juddering, but my roaming SIM was pretty good and Tanisha had found a spot with good reception, so it was almost as good as a regular call&#x2014; for now.&#x201C;I hear you.&#x201D; She sounded exhausted and it was only late afternoon on the West Coast.&#x201C;What&#x2019;s going on, Neesh?&#x201D; I thought maybe the connection had been cut. &#x201C;Neesh?&#x201D;&#x201C;Sorry. Let me get my head straight. Just a sec.&#x201D;This wasn&#x2019;t like her. Tanisha had the straightest head I knew&#x2014;the Tanisha I knew was an iron woman.&#x201C;Okay, it&#x2019;s like this: I&#x2019;ve been going out for the Black-Brown Alliance meetings and rallies, the big ones in Oakland. I took precautions, we all did &#x2014; phones locked and in airplane mode when we were on-site, no fingerprint unlocking, all our cards in Faraday pouches. We only talk in person with phones off or using encrypted disappearing chat. But I always remembered what you told me &#x2014;&#x201D;&#x201C;There&#x2019;s a difference between mass surveillance and targeted surveillance.&#x201D; &#x201C;Right. So I&#x2019;ve been extra careful. I use a burner for all that stuff, and I wear dazzle to the demos, watch out for kettles and get out fast when they start to form. But &#x2014;&#x201D;&#x201C;Come on, spit it out.&#x201D;&#x201C;You&#x2019;ll think I&#x2019;m being paranoid.&#x201D;&#x201C;Neesh, trust me, I will never, ever think you&#x2019;re being too paranoid.&#x201D;I heard her sigh and waited. With Neesh, sighs always came in pairs, it was something we used to tease her about. I hadn&#x2019;t thought of it in years, but my subconscious remembered. There it was.&#x201C;You were the one who taught me about binary transparency, right?&#x201D; &#x201C;Yeah.&#x201D;Binary transparency was an exciting idea, but also a complicated one that almost no one could actually understand. First, you had to understand what a hashing function is: that&#x2019;s a cryptographic algorithm that takes a long file (say, a computer program or an email or a software update) and generates a short &#x201C;fingerprint&#x201D; number from it that a human being can easily read aloud and compare with other fingerprints (for certain values of &#x201C;easily&#x201D;). If the hashing function is working well, it should be basically impossible to deliberately create two different files that have the same fingerprint, and likewise basically impossible to figure out what was in the original file just by looking at the fingerprint (for &#x201C;basically impossible&#x201D; think of all the hydrogen atoms being turned into computers that worked until the universe&#x2019;s heat-death to guess the answer, and still running out of both space and time).Next you have to understand public-private cryptographic keypairs. The short explanation: whatever a public key scrambles, only the private key can unscramble, and vice versa. So everyone shares their public keys as widely as possible and guards the secrecy of their private keys with their lives. If you get something you can decrypt with my public key, you know it was encrypted with my private key (and only my private key). If you encrypt something with my public key, you know that only someone with my private key can decrypt it. If you want to send me something that only you and I can read, you encrypt it with your private key and my public key, and then I use my private key and your public key to decrypt it&#x2014;and now I can be sure that only people with my private key can read the message, and only people with your private key could have sent it.When you combine hashing and keypairs, it gets cool: you can first hash a file, then encrypt the hash with your private key, and I can use that hash to check whether you sent the file, and whether the file was changed between you and me.Got all that? No? Join the club. Almost no one understands this stuff, which is a pity, because now we&#x2019;re about to get to binary transparency, which is awesome af, as the kids say.Stay with me: hashing lets you create a short &#x201C;fingerprint&#x201D; of a file. If you have your own copy of the file, you can hash it again and make sure it matches the fingerprint. If it doesn&#x2019;t, someone has altered the file since it was hashed. Keypairs let you scramble a file &#x2014; or a fingerprint &#x2014; so that you can be sure who sent it, and also make sure it wasn&#x2019;t changed, and even make sure no one else can see what the file is.Now let&#x2019;s talk about software updates and backdoors: all the software running on all the computers you rely on is, approximately speaking, total shit. That&#x2019;s because humans are imperfect, so they make errors, which is why every book you&#x2019;ve ever read has typos in it. The difference is that you can usually figure out what the writer meant even if there&#x2019;s a few typos sprinkled around, while tiny mistakes made by computer programmers lead to crashes, data-loss, and, of course, the possibility that other computer programmers &#x2014; let&#x2019;s call them &#x201C;hackers&#x201D; &#x2014; break into the program, take over the computer, and destroy your life.So we say &#x201C;security is a process and not a product&#x201D; &#x2014; meaning that we&#x2019;re going to be discovering bugs in the software you&#x2019;re depending on forever, and we need a way to fix those bugs when we find them. That&#x2019;s why every computer you use bugs you all the time to update it with a patch from the people who made it.Now, cryptography works. If a programmer does her job right and doesn&#x2019;t make mistakes, the messages that her program scrambles will resist brute-force attacks until the end of time and space (see above). When a government wants to access someone&#x2019;s secrets, they need to find a way to get at them without di- rectly attacking the crypto. I mean, why burn resources and time attacking the part of the lock mathematically proven to be secure? There are so many other angles for a government to use.Like, they could send someone to your house and put a tiny camera, the size of a pinhead, in a position that lets them see your screen. Or they could wait until you leave your laptop in a hotel room and send someone to break the &#x2014; inevitably shitty &#x2014; hotel-room door locks and take over your computer, with BadUSB or by sticking a hardware keylogger in it or some other method. But physical intrusion is so pre-digital; it lacks the elegance of a software-based attack.Which brings us back to &#x201C;security is a process.&#x201D; For software to be secure, it has to have a way to receive updates from the people who made it, because they&#x2019;re always finding bugs, and will always find bugs, and so security is a process and not a product.What about forcing a company to update its software with something that introduces a bug, rather than fixing one? Companies are not happy about doing this, but maybe you can bribe a low-level employee, or you can get your attorney general to threaten to put the CEO in jail unless he orders a flunky to write some spyware and ship it to the target(s) in the guise of a security update. As a bonus, paranoid people worried about government surveillance are also the people who are most diligent about applying security patches.That&#x2019;s where binary transparency comes in. Even if a company is willing to push spyware disguised as security, they probably don&#x2019;t want to send it to all their users, not least because the wider things are spread, the more likely it is that someone will spot the switcheroo and blow the whistle. The best way to ship a targeted backdoor is to target it &#x2014; at a user, a city, a region, possibly a country, but ideally not everyone, because &#x201C;everyone&#x201D; includes &#x201C;bored, obsessive grad students who decompile every update from every company looking for a thesis subject.&#x201D;Which means that one way to spot a backdoor in your security update is to compare every update you receive with all the updates that everyone else receives. That&#x2019;s binary transparency: programs ship with binary transparency modules that automatically take a fingerprint of every update they receive, and send that to one or more transparency servers, possibly with a fingerprint of the program before and after the update&#x2019;s installation &#x2014; sometimes there are different versions of programs based on language, so the English patch might not be the same as the Chinese patch because their error messages are in different languages. But when two Chinese users get two different patches, something might be going on.Binary transparency is elegant and cool. It gets turned on before companies get deputized to spy on their users, which means that it&#x2019;s already in place when the G-men show up at your door. If they force you to push out a backdoor, binary transparency will reveal it. If they force you to push out an update for everyone that turns off binary transparency, everyone will notice and their paranoid targets will stop using it.This means that a rational government agency won&#x2019;t even bother to ask for backdoors, because they&#x2019;ll never work. Because binary transparency takes backdoors off the table, it takes asking for backdoors off the table too.That&#x2019;s the theory. But binary transparency is one of those things that&#x2019;s ex- citing in theory and really messy in practice. First of all, nearly every binary transparency alert is a false alarm: maybe the company sends different updates to different customers as a way of live-testing an experimental feature, or the update or its fingerprint gets changed in some minor way by an ISP that&#x2019;s doing deep packet inspection or some other dumb thing. Neither of these things happen very often, but they both happen a lot more often than binary transparency catching a real backdoor (in part because companies known to have binary transparency turned on understandably don&#x2019;t get as many back-door demands from spies). So almost no one knows what binary transparency is, and if you do, chances are that all you know about it is that it&#x2019;s a thing that you can safely ignore because it only ever throws false alarms.Which wouldn&#x2019;t be so bad if government agencies were rational, but spies are by definition total weirdos. Think for a second about the kid you knew growing up who always wanted to be a spy someday &#x2014; the combination of grandiosity, authoritarianism, and paranoia. In the 1960s, the CIA tried surgically implanting cats with listening devices &#x2014; and training them to spy on America&#x2019;s enemies. (This is real. Google &#x201C;acoustic kitty.&#x201D;) Think about this for a second: not only did the CIA think the veterinarians who insisted you couldn&#x2019;t implant huge battery-operated recording devices in live cats were just not try- ing hard enough&#x2014;they also thought you could train cats. Because when you give paranoid, grandiose authoritarians an unlimited budget and no oversight, things get fucked up.So any assumption that the spies won&#x2019;t come knocking on a binary transparency shop because it&#x2019;ll only waste their time and yours drastically over-estimates the extent to which spies are adverse to wasting their time and yours.Which means some of those alerts from binary transparency checks aren&#x2019;t false alarms. They&#x2019;re just spooks betting on their ability to bull their way through stupid, uncooperative reality. Binary transparency is still used, because it shows up on checklists of &#x201C;things companies should do to resist spying,&#x201D; but in practice, everyone ignores it. Except Tanisha.",
  "articleSection": "Entertainment",
  "keywords": [
    "Hitting the Books",
    "hittingthebooks",
    "attack surface",
    "macmillan",
    "fiction",
    "cory doctorow",
    "cybersecurity",
    "binary transparency",
    "feature",
    "entertainment"
  ],
  "publisher": [
    {
      "@type": "Organization",
      "name": "Engadget",
      "url": "https://www.engadget.com",
      "logo": ["https://www.engadget.com/assets/images/eng-e-128.png"]
    }
  ],
  "dateModified": "Mon, Oct 19 2020 14:29:13 EDT"
}
